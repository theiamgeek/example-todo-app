version: 0.2
env:
  variables:
    "TAGNAME": ""
phases:
  install:
    runtime-versions:
      nodejs: 12
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building nodejs application...
      - npm install
      - npm run build-server
      - npm run build-public
      - npm run build-sass
      - npm run build-client
      - npm run build-content
      - echo Building Docker image $IMAGE_REPO_NAME:$CODEBUILD_BUILD_ID
      - docker build --progress plain --tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_ID .
      - echo tagging Docker image $IMAGE_REPO_NAME:$CODEBUILD_BUILD_ID to go into $IMAGE_REPO_NAME:$CODEBUILD_BUILD_ID $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_ID
      - docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_ID $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/%IMAGE_REPO_NAME:$CODEBUILD_BUILD_ID
artifacts:
  files:
    - 'public/**/*'

